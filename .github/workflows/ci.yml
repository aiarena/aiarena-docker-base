name: Build and push docker images

on: 
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

# Version number of the docker images - increment when there are huge changes
env:
  BOT_VERSION: 'v0.5.4'
  PYTHON_VERSION: '3.11'
  SC2_VERSION: '4.10-bookworm'

jobs:
  run_pip_install:
    name: Merge and install requirements.txt
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        python -m pip install poetry wheel
        poetry config virtualenvs.in-project true

    - name: Export requirements.txt
      run: |
        poetry export -f requirements.txt --output requirements.txt --without-hashes
        pip uninstall -y poetry
        rm -rf .venv

    - name: Install requirements.txt via pip
      run: |
        pip install -r requirements.txt

  build_docker_images:
    name: Build and test docker images
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: "Build the docker-compose stack with version"
      run: PYTHON_VERSION="${{ env.PYTHON_VERSION }}" SC2_VERSION="${{ env.SC2_VERSION }}" docker compose -f docker/docker-compose.yml build

    - name: Push versioned images
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: BOT_VERSION="${{ env.BOT_VERSION }}" PYTHON_VERSION="${{ env.PYTHON_VERSION }}" SC2_VERSION="${{ env.SC2_VERSION }}" docker compose -f docker/docker-compose.yml push --ignore-push-failures

